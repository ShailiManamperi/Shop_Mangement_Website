Index: backend/node_modules/sift/src/index.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/backend/node_modules/sift/src/index.ts b/backend/node_modules/sift/src/index.ts
new file mode 100644
--- /dev/null	(date 1718044729389)
+++ b/backend/node_modules/sift/src/index.ts	(date 1718044729389)
@@ -0,0 +1,54 @@
+import * as defaultOperations from "./operations";
+import {
+  Query,
+  QueryOperators,
+  BasicValueQuery,
+  ArrayValueQuery,
+  ValueQuery,
+  NestedQuery,
+  ShapeQuery,
+  Options,
+  createQueryTester,
+  EqualsOperation,
+  createQueryOperation,
+  createEqualsOperation,
+  createOperationTester,
+} from "./core";
+
+const createDefaultQueryOperation = <TItem, TSchema extends TItem = TItem>(
+  query: Query<TSchema>,
+  ownerQuery: any,
+  { compare, operations }: Partial<Options> = {},
+) => {
+  return createQueryOperation(query, ownerQuery, {
+    compare,
+    operations: Object.assign({}, defaultOperations, operations || {}),
+  });
+};
+
+const createDefaultQueryTester = <TItem, TSchema extends TItem = TItem>(
+  query: Query<TSchema>,
+  options: Partial<Options> = {},
+) => {
+  const op = createDefaultQueryOperation(query, null, options);
+  return createOperationTester(op);
+};
+
+export {
+  Query,
+  QueryOperators,
+  BasicValueQuery,
+  ArrayValueQuery,
+  ValueQuery,
+  NestedQuery,
+  ShapeQuery,
+  EqualsOperation,
+  createQueryTester,
+  createOperationTester,
+  createDefaultQueryOperation,
+  createEqualsOperation,
+  createQueryOperation,
+};
+export * from "./operations";
+
+export default createDefaultQueryTester;
